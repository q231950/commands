node {
    stages {
        stage("Clone") {
        checkout scm

        env
        }

        stage("Build") {
            sh 'swift build'
            sh 'swift package generate-xcodeproj'

            sh "xcodebuild build-for-testing -scheme 'Commands-Package' -configuration 'Debug' -derivedDataPath './derived_data'"
        }

        stage("Test") {
            sh "xcodebuild test-without-building -scheme 'Commands-Package' -configuration 'Debug' -derivedDataPath './derived_data'"
        }
    }

    post { 
        always { 
            echo 'Run Trainer'
            sh '/usr/local/bin/bundler install --path vendor/bundle'
            sh '/usr/local/bin/bundler exec trainer --path ./derived_data/Logs/Test'
        }
    }

    stage("Collect results") {
        junit 'derived_data/Logs/Test/*.xml'
    }

    stage("CLeanup") {
        sh 'git clean -dfx derived_data/Logs'
    }
}
